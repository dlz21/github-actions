name: test
on:
  repository_dispatch:
    types: [test-command]

jobs:
  ack:
    runs-on: ubuntu-latest
    steps:
      - name: "Add reaction üëç"
        uses: dlz21/github-actions/github/create-or-update-comment@0.1.0
        with:
          repository: ${{ github.event.client_payload.github.payload.repository.full_name }}
          comment-id: ${{ github.event.client_payload.github.payload.comment.id }}
          token: ${{ secrets.PUBLIC_REPO_ACCESS_TOKEN }}
          reaction-type: "+1"

  ping:
    runs-on: ubuntu-latest
    if: ${{ github.event.client_payload.slash_command.arg1 == 'ping' }}
    steps:
    # Update GitHub status for dispatch events
    - name: "Update GitHub Status for this ref"
      #if: ${{ github.event_name == 'repository_dispatch' }}
      uses: 'docker://cloudposse/github-status-updater'
      with:
        # We need to use args because GitHub actions overwrites many `GITHUB_*` environment variables
        args: "-action update_state -ref ${{ github.event.client_payload.pull_request.head.sha }} -repo ${{ github.event.client_payload.github.payload.repository.name }}"
      env:
        GITHUB_TOKEN: ${{ secrets.PUBLIC_REPO_ACCESS_TOKEN }}
        GITHUB_STATE: success
        GITHUB_CONTEXT: 'test/ping'
        GITHUB_DESCRIPTION: "pong"
        GITHUB_TARGET_URL: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}
        GITHUB_OWNER: ${{ github.event.client_payload.github.payload.repository.owner.login }}

  vue:
    runs-on: ubuntu-latest
    if: ${{ github.event.client_payload.slash_command.arg1 == 'vue' || github.event.client_payload.slash_command.arg1 == 'all' }}
    container: node:lts-alpine
    steps:
    # Update GitHub status for dispatch events
    - name: "Update GitHub Status for pending"
      uses: docker://cloudposse/github-status-updater
      with:
        args: "-action update_state -ref ${{ github.event.client_payload.pull_request.head.sha }} -repo ${{ github.event.client_payload.github.payload.repository.name }}"
      env:
        GITHUB_TOKEN: ${{ secrets.PUBLIC_REPO_ACCESS_TOKEN }}
        GITHUB_STATE: pending
        GITHUB_CONTEXT: "test/vue"
        GITHUB_DESCRIPTION: "tests started by @${{ github.event.client_payload.github.actor }}"
        GITHUB_TARGET_URL: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}
        GITHUB_REF: ${{ github.event.client_payload.pull_request.head.ref }}
        GITHUB_OWNER: ${{ github.event.client_payload.github.payload.repository.owner.login }}

    # Checkout the code from GitHub Pull Request
    - name: "Checkout code for ChatOps"
      uses: actions/checkout@v2
      with:
        token: ${{ secrets.PUBLIC_REPO_ACCESS_TOKEN }}
        repository: ${{ github.event.client_payload.pull_request.head.repo.full_name }}
        ref: ${{ github.event.client_payload.pull_request.head.ref }}

    # Setup Project
    - name: "Setup Project"
      run: npm install

    # Compile for OPS
    - name: "Test OPS Build"
      run: npm run build

    # Lint
    - name: "Line Vue"
      run: npm run lint

    # Run test
    - name: "Test Vue"
      run: npm run tests

    # Update GitHub status for dispatch events
    - name: "Update GitHub Status for failure"
      if: ${{ failure() }}
      uses: docker://cloudposse/github-status-updater
      with:
        args: "-action update_state -ref ${{ github.event.client_payload.pull_request.head.sha }} -repo ${{ github.event.client_payload.github.payload.repository.name }}"
      env:
        GITHUB_TOKEN: ${{ secrets.PUBLIC_REPO_ACCESS_TOKEN }}
        GITHUB_STATE: failure
        GITHUB_CONTEXT: "test/vue"
        GITHUB_DESCRIPTION: "tests failed"
        GITHUB_TARGET_URL: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}
        GITHUB_REF: ${{ github.event.client_payload.pull_request.head.ref }}
        GITHUB_OWNER: ${{ github.event.client_payload.github.payload.repository.owner.login }}

    # Update GitHub status for dispatch events
    - name: "Update GitHub Status for success"
      uses: docker://cloudposse/github-status-updater
      with:
        args: "-action update_state -ref ${{ github.event.client_payload.pull_request.head.sha }} -repo ${{ github.event.client_payload.github.payload.repository.name }}"
      env:
        GITHUB_TOKEN: ${{ secrets.PUBLIC_REPO_ACCESS_TOKEN }}
        GITHUB_STATE: success
        GITHUB_CONTEXT: "test/vue"
        GITHUB_DESCRIPTION: "tests passed"
        GITHUB_TARGET_URL: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}
        GITHUB_REF: ${{ github.event.client_payload.pull_request.head.ref }}
        GITHUB_OWNER: ${{ github.event.client_payload.github.payload.repository.owner.login }}

    # Update GitHub status for dispatch events
    - name: "Update GitHub Status for cancelled"
      if: ${{ cancelled() }}
      uses: docker://cloudposse/github-status-updater
      with:
        args: "-action update_state -ref ${{ github.event.client_payload.pull_request.head.sha }} -repo ${{ github.event.client_payload.github.payload.repository.name }}"
      env:
        GITHUB_TOKEN: ${{ secrets.PUBLIC_REPO_ACCESS_TOKEN }}
        GITHUB_STATE: error
        GITHUB_CONTEXT: "test/vue"
        GITHUB_DESCRIPTION: "tests cancelled"
        GITHUB_TARGET_URL: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}
        GITHUB_REF: ${{ github.event.client_payload.pull_request.head.ref }}
        GITHUB_OWNER: ${{ github.event.client_payload.github.payload.repository.owner.login }}
